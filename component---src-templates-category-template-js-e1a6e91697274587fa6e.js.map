{"version":3,"sources":["webpack://majaegeon.github.io/./src/components/postList.js","webpack://majaegeon.github.io/./src/components/pagination.js","webpack://majaegeon.github.io/./src/templates/category-template.js","webpack://majaegeon.github.io/./src/widgets/noticePosts.js","webpack://majaegeon.github.io/./src/widgets/recentPosts.js"],"names":["Thumbnail","thumbnail","class","src","alt","PostList","posts","contentHeader","className","map","edge","node","slug","title","frontmatter","excerpt","date","categories","pinned","notice","key","id","to","Pagination","currentPage","numPages","prevPage","nextPage","activeClassName","icon","faAngleLeft","fixedWidth","Array","from","length","_","i","faAngleRight","Category","pageContext","data","category","allMdx","edges","totalCount","pageTitle","description","limit","header","style","color","NoticePosts","useStaticQuery","slice","RecentPosts"],"mappings":"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","file":"component---src-templates-category-template-js-e1a6e91697274587fa6e.js","sourcesContent":["import React from \"react\";\nimport PostMeta from \"./postMeta\";\nimport { Link } from \"gatsby\";\nimport \"../styles/postList.scss\";\n\nfunction Thumbnail({thumbnail})\n{\n    if(thumbnail)\n    return (\n        <img class=\"post-thumbnail\" src={thumbnail} alt=\"post thumbnail\"/>\n    );\n    else return null;\n}\n\n\nexport default function PostList ({posts, contentHeader}) {\n    return (\n        <section>\n            {contentHeader}\n\n            <div className=\"postlist\">\n            {posts.map((edge) => {\n                const node = edge.node;\n\n                const slug = node.slug;\n                const title = node.frontmatter.title;\n                const thumbnail = node.frontmatter.thumbnail;\n                const excerpt = node.excerpt;\n                const date = node.frontmatter.date;\n                const categories = node.frontmatter.categories;\n                const pinned = node.frontmatter.pinned;\n                const notice = node.frontmatter.notice;\n\n                return(\n                    <article className=\"post-item\" key={node.id}>\n                        <Thumbnail thumbnail={thumbnail}/>\n                        <Link to={`/${slug}`} className=\"post-content\">            \n                            <h1 className=\"post-title\">{title}</h1>\n\n                            <div className=\"post-excerpt\">{excerpt}</div>\n\n                            <PostMeta date={date} categories={categories} pinned={pinned} notice={notice}/>\n                        </Link>\n                    </article>\n                );\n            })}\n            </div>\n        </section>\n    );\n}","import React from \"react\";\nimport { Link } from \"gatsby\";\nimport { faAngleLeft, faAngleRight } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nimport \"../styles/pagination.scss\";\n\nexport default function Pagination ({currentPage, numPages, slug}) {\n    const prevPage = `${slug}/${currentPage <= 2 ? \"\" : currentPage - 1}`;\n    const nextPage = `${slug}/${(currentPage === numPages) ? (currentPage === 1? \"\" : currentPage) : currentPage + 1}`;\n\n    return (\n        <ul className=\"pagination\">\n            <li className=\"pagination-item\">\n                <Link to={prevPage} className=\"pagination-link\" activeClassName=\"disabled\">\n                    <FontAwesomeIcon icon={faAngleLeft} fixedWidth/>\n                </Link>\n\n            </li>\n\n            {Array.from({ length: numPages }, (_, i) => (\n                <li className=\"pagination-item\">\n                    <Link key={`pagination-number${i + 1}`} to={`${slug}/${i === 0 ? \"\" : i + 1}`} className=\"pagination-link\" activeClassName=\"active\">\n                        {i + 1}\n                    </Link>\n                </li>\n            ))}\n\n            <li className=\"pagination-item\">\n                <Link to={nextPage} className=\"pagination-link\" activeClassName=\"disabled\">\n                    <FontAwesomeIcon icon={faAngleRight} fixedWidth/>\n                </Link>\n            </li>\n        </ul>\n    );\n}","import React from \"react\";\nimport { graphql } from \"gatsby\";\nimport Layout from \"../layout\";\nimport PostList from \"../components/postList\";\nimport ContentHeader from \"../components/contentHeader\";\nimport NoticePosts from \"../widgets/noticePosts\";\nimport RecentPosts from \"../widgets/recentPosts\";\nimport Pagination from \"../components/pagination\";\nimport SEO from \"../components/seo\";\n\nexport default function Category({ pageContext, data }) {\n    const { category, currentPage, numPages, slug } = pageContext;\n    const { edges, totalCount } = data.allMdx;\n\n    return (\n        <Layout pageTitle={category}>\n            <SEO title={category} description={`This is a list of posts in the ${category} category.`}/>\n            \n            <main id=\"main-wrapper\">\n                <div id=\"rightbar\">\n                    <NoticePosts limit={5} />\n                    <RecentPosts limit={5} />\n                </div>\n\n                <div id=\"content\">\n                    <PostList posts={edges} contentHeader={\n                        <ContentHeader header={\n                            <div>{category} 전체 글 <span style={{ color: '#ef402f'}}>{totalCount}</span></div>\n                        }/>\n                    }/>\n\n                    <Pagination currentPage={currentPage} numPages={numPages} slug={slug}/>\n                </div>\n            </main>\n        </Layout>\n    );\n}\n\nexport const pageQuery = graphql`\n    query ($category: String, $skip: Int!, $limit: Int!) {\n        allMdx(\n            limit: $limit\n            skip: $skip\n            sort: {fields: [frontmatter___date], order: DESC} \n            filter: {frontmatter: {categories: {in: [$category]}}}\n        ) {\n            totalCount\n            edges {\n                node {\n                    frontmatter {\n                        categories\n                        date\n                        notice\n                        pinned\n                        title\n                        thumbnail\n                    }\n                    excerpt(truncate: true)\n                    id\n                    slug\n                }\n            }\n        }\n    }\n`;","import React from \"react\";\nimport { graphql, Link, useStaticQuery } from \"gatsby\";\n\nexport default function NoticePosts({limit}) {\n    const data = useStaticQuery(graphql`\n        query{\n            allMdx(sort: {fields: frontmatter___date, order: DESC}, limit: 10, filter: {frontmatter: {notice: {eq: true}}}) {\n                totalCount\n                edges {\n                    node {\n                        frontmatter {\n                            title\n                        }\n                        id\n                        slug\n                    }\n                }\n            }\n        }\n    `);\n\n    const posts = data.allMdx.edges.slice(0, limit);\n\n\n\n    return (\n        <div className=\"widget\">\n            <div className=\"widget-header\">Notice</div>\n\n            <ul>\n                {posts.length > 0 ? posts.map((edge) => {\n                    const { slug, id } = edge.node;\n                    const { title } = edge.node.frontmatter;\n\n                    return (\n                        <li key={id}>\n                            <Link className=\"list-item\" to={`/${slug}`}>{title}</Link>\n                        </li>\n                    );\n                }) : (<li className=\"list-item\">The list is empty.</li>)}\n            </ul>\n        </div>\n    );\n}","import React from \"react\";\nimport { graphql, Link, useStaticQuery } from \"gatsby\";\n\nexport default function RecentPosts({limit}) {\n    const data = useStaticQuery(graphql`\n        query{\n            allMdx(sort: {fields: frontmatter___date, order: DESC}, limit: 10) {\n                totalCount\n                edges {\n                    node {\n                        frontmatter {\n                            title\n                        }\n                        id\n                        slug\n                    }\n                }\n            }\n        }\n    `);\n\n    const posts = data.allMdx.edges.slice(0, limit);\n\n    return (\n        <div className=\"widget\">\n            <div className=\"widget-header\">Recent Posts</div>\n            <ul>\n                {posts.length > 0 ? posts.map((edge) => {\n                    const { slug, id } = edge.node;\n                    const { title } = edge.node.frontmatter;\n\n                    return (\n                        <li key={id}>\n                            <Link className=\"list-item\" to={`/${slug}`}>{title}</Link>\n                        </li>\n                    );\n                }) : (<li className=\"list-item\">The list is empty.</li>)}\n            </ul>\n        </div>\n    );\n}"],"sourceRoot":""}