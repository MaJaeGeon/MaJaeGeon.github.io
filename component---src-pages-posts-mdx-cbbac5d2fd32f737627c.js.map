{"version":3,"sources":["webpack://majaegeon.github.io/./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","webpack://majaegeon.github.io/./src/pages/posts.mdx","webpack://majaegeon.github.io/./src/components/postList.js","webpack://majaegeon.github.io/./src/widgets/ads.js","webpack://majaegeon.github.io/./src/templates/page-template.js","webpack://majaegeon.github.io/./src/widgets/noticePosts.js","webpack://majaegeon.github.io/./src/widgets/recentPosts.js"],"names":["_objectWithoutPropertiesLoose","source","excluded","key","i","target","sourceKeys","Object","keys","length","indexOf","_frontmatter","layoutProps","pageQuery","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","posts","data","allMdx","edges","contentHeader","header","style","color","totalCount","isMDXComponent","Thumbnail","thumbnail","class","src","alt","PostList","className","map","edge","node","slug","title","frontmatter","excerpt","date","categories","pinned","notice","id","to","Ads","async","crossorigin","PageTemplate","pageContext","children","description","pageTitle","limit","NoticePosts","useStaticQuery","slice","RecentPosts"],"mappings":"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","file":"component---src-pages-posts-mdx-cbbac5d2fd32f737627c.js","sourcesContent":["export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/majaegeon.github.io/majaegeon.github.io/src/templates/page-template.js\";\nimport PostList from \"../components/postList\";\nimport ContentHeader from \"../components/contentHeader\";\nimport { graphql } from \"gatsby\";\nexport const pageQuery = graphql`\n    query {\n        allMdx(sort: {fields: frontmatter___date, order: DESC}, limit: 2000) {\n            totalCount\n            edges {\n                node {\n                    frontmatter {\n                        categories\n                        date\n                        notice\n                        pinned\n                        title\n                        thumbnail\n                    }\n                    excerpt(truncate: true)\n                    id\n                    slug\n                }\n            }\n        }\n    }\n`;\nexport const _frontmatter = {};\nconst layoutProps = {\n  pageQuery,\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n\n    <PostList posts={props.data.allMdx.edges} contentHeader={<ContentHeader header={<div>전체 글 <span style={{\n        color: '#ef402f'\n      }}>{props.data.allMdx.totalCount}</span></div>} mdxType=\"ContentHeader\" />} mdxType=\"PostList\" />\n\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import React from \"react\";\nimport PostMeta from \"./postMeta\";\nimport { Link } from \"gatsby\";\nimport \"../styles/postList.scss\";\n\nfunction Thumbnail({thumbnail})\n{\n    if(thumbnail)\n    return (\n        <img class=\"post-thumbnail\" src={thumbnail} alt=\"post thumbnail\"/>\n    );\n    else return null;\n}\n\n\nexport default function PostList ({posts, contentHeader}) {\n    return (\n        <section>\n            {contentHeader}\n\n            <div className=\"postlist\">\n            {posts.map((edge) => {\n                const node = edge.node;\n\n                const slug = node.slug;\n                const title = node.frontmatter.title;\n                const thumbnail = node.frontmatter.thumbnail;\n                const excerpt = node.excerpt;\n                const date = node.frontmatter.date;\n                const categories = node.frontmatter.categories;\n                const pinned = node.frontmatter.pinned;\n                const notice = node.frontmatter.notice;\n\n                return(\n                    <article className=\"post-item\" key={node.id}>\n                        <Thumbnail thumbnail={thumbnail}/>\n                        <Link to={`/${slug}`} className=\"post-content\">            \n                            <h1 className=\"post-title\">{title}</h1>\n\n                            <div className=\"post-excerpt\">{excerpt}</div>\n\n                            <PostMeta date={date} categories={categories} pinned={pinned} notice={notice}/>\n                        </Link>\n                    </article>\n                );\n            })}\n            </div>\n        </section>\n    );\n}","import React from \"react\";\n\nexport default function Ads() {\n    return (\n        <div className=\"widget\">\n            <script async src=\"https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-5162740208916448\" crossorigin=\"anonymous\"></script>\n        </div>\n    );\n}","import React from \"react\";\nimport Layout from \"../layout\";\nimport SEO from \"../components/seo\";\nimport NoticePosts from \"../widgets/noticePosts\";\nimport RecentPosts from \"../widgets/recentPosts\";\nimport Ads from \"../widgets/ads\";\n\nexport default function PageTemplate({ pageContext, children }) {\n    const { title, description } = pageContext.frontmatter;\n\n    return (\n        <Layout pageTitle={title}>\n            <SEO title={title} description={description}/>\n\n            <main id=\"main-wrapper\">\n                <div id=\"rightbar\">\n                    <NoticePosts limit={5} />\n                    <RecentPosts limit={5} />\n                    <Ads />\n                </div>\n                <div id=\"content\">\n                    {children}\n                </div>\n            </main>\n        </Layout>\n    )\n}","import React from \"react\";\nimport { graphql, Link, useStaticQuery } from \"gatsby\";\n\nexport default function NoticePosts({limit}) {\n    const data = useStaticQuery(graphql`\n        query{\n            allMdx(sort: {fields: frontmatter___date, order: DESC}, limit: 10, filter: {frontmatter: {notice: {eq: true}}}) {\n                totalCount\n                edges {\n                    node {\n                        frontmatter {\n                            title\n                        }\n                        id\n                        slug\n                    }\n                }\n            }\n        }\n    `);\n\n    const posts = data.allMdx.edges.slice(0, limit);\n\n\n\n    return (\n        <div className=\"widget\">\n            <div className=\"widget-header\">Notice</div>\n\n            <ul>\n                {posts.length > 0 ? posts.map((edge) => {\n                    const { slug, id } = edge.node;\n                    const { title } = edge.node.frontmatter;\n\n                    return (\n                        <li key={id}>\n                            <Link className=\"list-item\" to={`/${slug}`}>{title}</Link>\n                        </li>\n                    );\n                }) : (<li className=\"list-item\">The list is empty.</li>)}\n            </ul>\n        </div>\n    );\n}","import React from \"react\";\nimport { graphql, Link, useStaticQuery } from \"gatsby\";\n\nexport default function RecentPosts({limit}) {\n    const data = useStaticQuery(graphql`\n        query{\n            allMdx(sort: {fields: frontmatter___date, order: DESC}, limit: 10) {\n                totalCount\n                edges {\n                    node {\n                        frontmatter {\n                            title\n                        }\n                        id\n                        slug\n                    }\n                }\n            }\n        }\n    `);\n\n    const posts = data.allMdx.edges.slice(0, limit);\n\n    return (\n        <div className=\"widget\">\n            <div className=\"widget-header\">Recent Posts</div>\n            <ul>\n                {posts.length > 0 ? posts.map((edge) => {\n                    const { slug, id } = edge.node;\n                    const { title } = edge.node.frontmatter;\n\n                    return (\n                        <li key={id}>\n                            <Link className=\"list-item\" to={`/${slug}`}>{title}</Link>\n                        </li>\n                    );\n                }) : (<li className=\"list-item\">The list is empty.</li>)}\n            </ul>\n        </div>\n    );\n}"],"sourceRoot":""}